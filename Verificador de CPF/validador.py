#transformar o cpf em apenas numeros 
def valida_cpf():
    
    n_cpf = input()
    
    if len(n_cpf) != 11:
        print("CPF INVALIDO")
    
    else:
        cpf = int(n_cpf)

        n1 = int(cpf/10000000000)
        n2 = int((cpf-n1*10000000000)/1000000000)
        n3 = int((cpf-(n1*10000000000+n2*1000000000))/100000000)
        n4 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000))/10000000)
        n5 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000))/1000000)
        n6 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000))/100000)
        n7 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000+n6*100000))/10000)
        n8 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000+n6*100000+n7*10000))/1000)
        n9 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000+n6*100000+n7*10000+n8*1000))/100)
        n10 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000+n6*100000+n7*10000+n8*1000+n9*100))/10)
        n11 = int((cpf-(n1*10000000000+n2*1000000000+n3*100000000+n4*10000000+n5*1000000+n6*100000+n7*10000+n8*1000+n9*100+n10*10)))


        v1 = n1*10 + n2*9 + n3*8 + n4*7 + n5*6 + n6*5 + n7*4 + n8*3 + n9*2
        v2 = n1*11 + n2*10 + n3*9 + n4*8 + n5*7 + n6*6 + n7*5 + n8*4 + n9*3 + n10*2

        if (v1*10)%11 == n10:
            if (v2*10)%11 == n11:
                print("CPF VALIDO")
            else:
                print("CPF INVALIDO")
        else:
            print("CPF INVALIDO")

valida_cpf()

"""
Adicionado via github
"""